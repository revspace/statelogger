#!/usr/bin/perl -w
use strict;
use autodie;
use Fcntl qw(SEEK_SET);

my $fn = "/var/statelog";
my $header_length = 8;

if (not -e $fn) {
    open my $fh, "> :raw", $fn;
    print $fh pack "q", time;
    close $fh;
}

open my $fh, "+< :raw", $fn;
read($fh, my $start_time, $header_length) == $header_length or die "short read";

$start_time = unpack "q", $start_time;
my $now = time();

$now >= $start_time or die sprintf(
    "FATAL: start time of %s is in the future (start_time = %s, now = %s)",
    $fn,
    scalar localtime $start_time,
    scalar localtime $now,
);

my $offset = $header_length + int(($now - $start_time) / 60);
my $current = -e "/tmp/space-is-open" ? "1" : "0";

my $min_file_length = $offset + 1;
if (-s $fh < $min_file_length) {
    truncate $fh, $min_file_length;
} else {
    seek $fh, $offset, SEEK_SET;
    read $fh, my $old, 1;
    exit 0 if $old eq $current;  # Nothing to do

    warn "Writing over existing data (was $old, now $current)"
        if $old ne "\0" and $old ne "?";
}

seek $fh, $offset, SEEK_SET;
print $fh $current;
close $fh;
